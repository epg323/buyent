{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","costs","fairness","itemName","itemPrice","show","enterItem","bind","enterPrice","priceCheck","e","newItem","currentTarget","value","this","setState","newPrice","preventDefault","compared","hide","fairnessMessage","sampleCard","Card","style","width","margin","Img","variant","src","Body","Title","Text","Button","display","padding","flexDirection","justifyContent","backgroundColor","color","marginBottom","InputGroup","className","Prepend","id","FormControl","placeholder","aria-label","aria-describedby","onChange","onClick","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oTAgGeA,G,wDAxFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,SAAU,OACVC,SAAU,GACVC,UAAW,KACXC,MAAM,GAER,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAXF,E,sDAcRG,GACN,IAAMC,EAAUD,EAAEE,cAAcC,MAChCC,KAAKC,SAAS,CAAEZ,SAAUQ,M,iCAGnBD,GACT,IAAMM,EAAWN,EAAEE,cAAcC,MACjCC,KAAKC,SAAS,CAAEX,UAAWY,M,iCAGlBN,GACTA,EAAEO,iBACF,IAAMC,EAAWJ,KAAKd,MAAMI,UAAYU,KAAKd,MAAMC,MAC7CkB,EAA+B,mBAAxBL,KAAKd,MAAMG,SACxB,IAAgB,IAAbe,EAAkB,CAEnBJ,KAAKC,SAAS,CAAEb,SADF,uBACmBG,KAAMc,QACpC,CAEHL,KAAKC,SAAS,CAAEb,SADF,sBACmBG,KAAMc,O,+BAMzC,IAAMC,EAA0C,yBAAxBN,KAAKd,MAAME,SAA2B,gCAA2B,iCACnFmB,EAAcP,KAAKd,MAAMK,MAC7B,kBAACiB,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,QAASC,OAAO,cACpC,kBAACH,EAAA,EAAKI,IAAN,CAAUC,QAAQ,MAAMC,IAAI,2MAC5B,kBAACN,EAAA,EAAKO,KAAN,KACE,kBAACP,EAAA,EAAKQ,MAAN,KAAahB,KAAKd,MAAMG,SAAxB,eACA,kBAACmB,EAAA,EAAKS,KAAN,SACIjB,KAAKd,MAAMC,MADf,cAGA,kBAACqB,EAAA,EAAKQ,MAAN,wBACA,kBAACR,EAAA,EAAKS,KAAN,KAAYjB,KAAKd,MAAME,UACvB,kBAAC8B,EAAA,EAAD,CAAQL,QAAQ,WAAWP,KAIjC,OACE,yBAAKG,MAAO,CAACU,QAAQ,OAAQC,QAAQ,OAAQC,cAAc,SAAUC,eAAe,SAAUC,gBAAgB,YAC5G,wBAAId,MAAO,CAACe,MAAM,UAAWC,aAAa,SAA1C,+CACA,kBAACC,EAAA,EAAD,CAAYC,UAAU,QACpB,kBAACD,EAAA,EAAWE,QAAZ,KACE,kBAACF,EAAA,EAAWT,KAAZ,CAAiBY,GAAG,gBAApB,gCAEF,kBAACC,EAAA,EAAD,CACEC,YAAY,OACZC,aAAW,OACXC,mBAAiB,eACjBC,SAAWlC,KAAKR,UAChBO,MAASC,KAAKd,MAAMG,YAGxB,kBAACqC,EAAA,EAAD,CAAYC,UAAU,QACpB,kBAACD,EAAA,EAAWE,QAAZ,KACE,kBAACF,EAAA,EAAWT,KAAZ,CAAiBY,GAAG,gBAApB,8CAEF,kBAACC,EAAA,EAAD,CACEC,YAAY,eACZC,aAAW,SACXC,mBAAiB,eACjBC,SAAWlC,KAAKN,WAChBK,MAASC,KAAKd,MAAMI,aAGxB,kBAAC4B,EAAA,EAAD,CAAQL,QAAQ,UAAUsB,QAAWnC,KAAKL,YAA1C,sCACCY,O,GAnFS6B,IAAMC,YCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9645452e.chunk.js","sourcesContent":["import React from 'react';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      costs: 1,\n      fairness: 'fair',\n      itemName: '',\n      itemPrice: null,\n      show: false\n    }\n    this.enterItem = this.enterItem.bind(this)\n    this.enterPrice = this.enterPrice.bind(this)\n    this.priceCheck = this.priceCheck.bind(this)\n  }\n\n  enterItem(e){\n      const newItem = e.currentTarget.value\n      this.setState({ itemName: newItem}) \n  }\n\n  enterPrice(e){\n    const newPrice = e.currentTarget.value\n    this.setState({ itemPrice: newPrice})\n  }\n\n  priceCheck(e){\n    e.preventDefault()\n    const compared = this.state.itemPrice < this.state.costs\n    const hide = this.state.itemName === 'Hand Sanitizer'\n    if(compared === true){\n      const level = 'Bargain üòá'\n      this.setState({ fairness: level, show: hide})\n    }else{\n      const level = 'Ripoff ü§¨'\n      this.setState({ fairness: level, show: hide})\n    }\n    \n  }\n\n  render(){\n    const fairnessMessage = this.state.fairness === 'Bargain üòá'? 'Give an awesome review ‚≠ê':'Snitch on a store üêÄ'\n    const sampleCard = (this.state.show &&\n      <Card style={{ width: '18rem', margin:'1rem auto' }}>\n        <Card.Img variant=\"top\" src=\"https://imagesvc.meredithcorp.io/v3/mm/image?q=85&c=sc&poi=face&w=1200&h=800&url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F20%2F2020%2F04%2F23%2Fsanitizer_new_6oz_1200x6301.jpg\" />\n        <Card.Body>\n          <Card.Title>{this.state.itemName} avg. cost:</Card.Title>\n          <Card.Text>\n            ${this.state.costs} per ounce\n          </Card.Text>\n          <Card.Title>Price fairness:</Card.Title>\n          <Card.Text>{this.state.fairness}</Card.Text>\n          <Button variant=\"primary\">{fairnessMessage}</Button>\n          </Card.Body>\n        </Card>)\n    \n    return (\n      <div style={{display:'flex', padding:'10px', flexDirection:'Column', justifyContent:'Center', backgroundColor:'#ff6200'}}>\n        <h3 style={{color:\"#212529\", marginBottom:'1rem'}}>üß¥Commodity Democracy‚öñÔ∏è</h3>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">ü•õ Commodity Name</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"Name\"\n            aria-label=\"Name\"\n            aria-describedby=\"basic-addon1\"\n            onChange= {this.enterItem}\n            value = {this.state.itemName}\n          />\n        </InputGroup>\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon1\">üí∏ Price per ounce &nbsp;&nbsp;&nbsp;</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            placeholder=\"enter amount\"\n            aria-label=\"amount\"\n            aria-describedby=\"basic-addon1\"\n            onChange= {this.enterPrice}\n            value = {this.state.itemPrice}\n          />\n        </InputGroup>\n        <Button variant=\"primary\" onClick = {this.priceCheck}>üè∑Ô∏è Get that price!</Button>\n        {sampleCard}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}